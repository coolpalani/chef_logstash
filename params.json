{"name":"Chef logstash","tagline":"Chef Cookbook with Resource Providers to manage Logstash","body":"# chef_logstash cookbook\r\n\r\nThis is a Library Style cookbook that provides Chef Resource Providers to create and\r\nmanage your [Logstash](http://logstash.net/) environment.\r\n\r\n# Requirements\r\n\r\nThe following cookbooks are suggested to use this cookbook:\r\n\r\n  + [java::openjdk](https://github.com/opscode-cookbooks/java)\r\n  + [runit](https://github.com/opscode-cookbooks/runit)\r\n\r\n# Usage\r\n\r\n# Resources and Providers\r\n\r\n## logstash_instance\r\nThe intention is to provide a stable interface to creating instances of\r\nLogstash on your servers. This means creating a instance via\r\n`logstash_instance` will download, install, and setup a functional\r\ninstance of Logstash but it does not handle any configuration details.\r\n\r\nThe following actions are supported and `:create` is the default:\r\n\r\n + `:create` - Creates a named instance of Logstash. This action will\r\ndownload logstash `:version` to the `:dst_dir`. It creates the `:user`\r\nand `:group` used to run Logstash. And finally it creates the `runit`\r\nresource required to manage the service. It does not _start_ the service\r\nas that is a job for `:enable`.\r\n\r\n + `:enable` - Enables the specified `service_type` or the default `init`.\r\n + `:update` -\r\n + `:destroy` -\r\n + `:nothing` -\r\n\r\nThese attributes are defined in the resource:\r\n\r\n + `:name`\r\n + `:user`\r\n + `:group`\r\n + `:conf_dir`\r\n + `:dst_dir`\r\n + `:service_type` -\r\n + `:service_options` -\r\n + `:install_type` -\r\n + `:install_options` -\r\n\r\nUsage example:\r\n\r\n    logstash_instance 'default' do\r\n      install_options({\r\n        url:      node.logstash.install_options.fetch(:url)\r\n        checksum: node.logstash.install_options.fetch(:checksum)\r\n        version:  node.logstash.install_options.fetch(:version)\r\n      })\r\n      action   [:create, :enable]\r\n    end\r\n\r\n## logstash_config\r\n\r\nThe following actions are supported and `:create` is the default:\r\n\r\n + `:create` - Creates a named configuration for a specific Logstash plugin.\r\nThis action will create a sub-resource based on the `plugin_type` and `plugin`\r\nspecified. The `plugin_config` attribute will be passed to the sub-resource\r\nduring resource creation. We use the `instance` attribute to link this\r\nconfiguration to a specific Logstash instance.\r\n + `:enable` - Ensures the configuration for the specified instance has been loaded.\r\n + `:update` -\r\n + `:destroy` - Remove the named configuration.\r\n + `:nothing` - Does nothing, except define the resource with the associated\r\nattributes.\r\n\r\nThese attributes are defined in the resource:\r\n\r\n + `:instance` - The Logstash instance this plugin is associated with.\r\n + `:plugin` - One of the numerous [Logstash plugins](http://logstash.net/docs/1.1.9/).\r\n + `:plugin_type` - Accepts one of 'input', 'filter', 'output'\r\n + `:plugin_config`- A hash containing the key-value pairs that configure\r\nthe plugin.\r\n\r\nUsage example:\r\n\r\n    logstash_config 'httpd_log_files' do\r\n      instance    'default'\r\n      plugin      'file'\r\n      plugin_type 'input'\r\n      plugin_config({\r\n        path => ['/var/log/httpd/*_log'],\r\n        type => 'httpd'\r\n      })\r\n      action [:create, :enable]\r\n    end\r\n\r\n# Contributing\r\n\r\n## Testing\r\n\r\n[![Build Status](https://travis-ci.org/miah/chef_logstash.png)](https://travis-ci.org/miah/chef_logstash)\r\n[![Code Climate](https://codeclimate.com/github/miah/chef_logstash.png)](https://codeclimate.com/github/miah/chef_logstash)\r\n[![Coverage Status](https://coveralls.io/repos/miah/chef_logstash/badge.png?branch=master)](https://coveralls.io/r/miah/chef_logstash?branch=master)\r\n\r\n## Code Style\r\n\r\nThis code follows the [Ruby Style Guide](https://github.com/bbatsov/ruby-style-guide) and all contributions should as well.\r\n\r\nThe code style is checked by [Rubocop](http://batsov.com/rubocop/) and can be checked by executing `rake test:rubocop` or `rubocop`.\r\n\r\n# Author\r\n\r\nAuthor:: Miah Johnson (<miah@chia-pet.org>)\r\n\r\n# Donations\r\n\r\n[![Gittip](https://www.gittip.com/assets/9.4.5/logo.png)](https://www.gittip.com/miah/)\r\n\r\n[![Bitcoin](http://bitcoinprices.com/images/bitcoin.png)](bitcoin:1DT5XQrtAk1M9V5RodvEHddfe7Nqd1kMjN)\r\n\r\n# License\r\n\r\n    Copyright 2013 Miah Johnson\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n        http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}